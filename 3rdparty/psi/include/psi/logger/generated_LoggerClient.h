/// DO NOT EDIT THIS FILE. IT IS GENERATED !!!

#pragma once

#include "generated_ILogger.h"
#include "psi/shared/ipc/client/IClientIPC.hpp"
#include "psi/thread/ILoop.h"

namespace psi::logger {

class LoggerClient : public ILogger, public psi::ipc::client::IClientIPC
{
public:
    LoggerClient(std::shared_ptr<psi::thread::ILoop> loop)
        : psi::ipc::client::IClientIPC("LoggerService", loop)
    {
    }

    void registerClient(std::string arg0, OnClientRegistered arg1) override
    {
        INVOKE_SERVER_FN(uint16_t(1), arg0, arg1);
    }

    void log(uint16_t arg0, std::string arg1) override
    {
        INVOKE_SERVER_FN(uint16_t(2), arg0, arg1);
    }
};

} // namespace psi::logger
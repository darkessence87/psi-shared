/// DO NOT EDIT THIS FILE. IT IS GENERATED !!!

#pragma once

#include "generated_ILogger.h"
#include "psi/shared/ipc/server/IServerIPC.h"
#include "psi/thread/ILoop.h"

namespace psi::logger {

class LoggerServer : public ILogger, public psi::ipc::server::IServerIPC<LoggerServer>
{
public:
    LoggerServer(std::shared_ptr<psi::ILoop> loop)
        : psi::ipc::server::IServerIPC<LoggerServer>("LoggerService", loop)
    {
    }

    LoggerServer &server() override
    {
        return *this;
    }

    psi::ipc::server::FnServiceMap<LoggerServer> generateFnMap() override
    {
        return {
            {uint16_t(1), &LoggerServer::registerClient},
            {uint16_t(2), &LoggerServer::log},
        };
    }

    void registerClient(std::string, OnClientRegistered) override
    {
        /// NOT IMPLEMENTED
    }

    void log(uint16_t, std::string) override
    {
        /// NOT IMPLEMENTED
    }
};

} // namespace psi::logger